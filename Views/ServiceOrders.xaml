<mah:MetroWindow  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="VityazReports.Views.ServiceOrders"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:VityazReports.Views" xmlns:vm="clr-namespace:VityazReports.ViewModel"
                  mc:Ignorable="d" 
                   xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                  d:DesignHeight="450" d:DesignWidth="800"
      Title="Заявки техникам">
    <mah:MetroWindow.DataContext>
        <vm:ServiceOrdersViewModel/>
    </mah:MetroWindow.DataContext>
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <!--<Button Foreground="White" BorderThickness="0" Width="35" ToolTip="Фильтр" Command="{Binding OpenFlyoutFilterCommand}">
                <iconPacks:BootstrapIcons Kind="Filter"/>
            </Button>-->
            <Button Foreground="White" BorderThickness="0" Width="35" ToolTip="Создать заявку" Command="{Binding FlyoutNewServiceOrderVisibleCommand}">
                <iconPacks:EvaIcons Kind="PersonAdd"/>
            </Button>
            <Button Foreground="White" BorderThickness="0" Width="35" ToolTip="Обновить" Command="{Binding ShowServiceOrderOnMapCommand}">
                <iconPacks:EvaIcons Kind="Refresh"/>
            </Button>
            <Button Foreground="White" BorderThickness="0" Width="35" ToolTip="Справка" Command="{Binding HelpCommand}">
                <iconPacks:EvaIcons Kind="QuestionMarkCircle"/>
                <!--<iconPacks:BootstrapIcons Kind="Question"/>-->
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <StackPanel Margin="5,2">
                <DatePicker SelectedDateFormat="Short" SelectedDate="{Binding FilterDate, StringFormat=\{0:dd.MM.yyyy\}}" Padding="5"/>
            </StackPanel>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Grid>
        <mah:Flyout Panel.ZIndex="2" Position="Right" IsModal="True" IsOpen="{Binding FlyoutFilterOpened}" >
            <StackPanel>
                <DatePicker SelectedDateFormat="Short" SelectedDate="{Binding FilterDate, StringFormat=\{0:dd.MM.yyyy\}}" Margin="5"/>
                <Button Margin="5" Content="Показать" Command="{Binding ShowServiceOrderOnMapCommand}"/>
                <Button Margin="5" Content="Снять выделение" Command="{Binding ClearSelectionCommand}"/>
            </StackPanel>
        </mah:Flyout>
        <mah:Flyout Panel.ZIndex="2" Position="Left" IsModal="True" IsOpen="{Binding FlyoutServicemanListOpened}">
            <StackPanel CanVerticallyScroll="True">
                <ListBox ItemsSource="{Binding ServicemanList}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <ToggleButton Margin="5" Content="{Binding NewName}" Tag="{Binding NewServicemanId}" IsChecked="{Binding Checked}"
                                                  Command="{Binding DataContext.SelectServicemanCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </mah:Flyout>
        <mah:Flyout Panel.ZIndex="2" Position="Bottom" IsModal="True" IsOpen="{Binding FlyoutNewServiceOrder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Content="Дата заявки" Margin="5"/>
                <DatePicker Grid.Row="0" Grid.Column="1" SelectedDate="{Binding NewServiceOrderDate, StringFormat=\{0:dd.MM.yyyy\}}" Margin="5"/>
                <Label Grid.Row="1" Grid.Column="0" Content="№ объекта" Margin="5"/>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding NewServiceOrderObjectNumber}" Margin="5"/>
                <Label Grid.Row="2" Grid.Column="0" Content="Техник" Margin="5"/>
                <mah:DropDownButton Grid.Row="2" Grid.Column="1" ItemsSource="{Binding ServicemanList}" DisplayMemberPath="NewName"  Margin="5"/>
                <Label Grid.Row="3" Grid.Column="0" Content="Описание заявки" Margin="5"/>
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding NewServiceOrderDescription}" Margin="5"/>
                <Button Grid.Row="4" Grid.ColumnSpan="2" Margin="5" Content="Создать" Command="{Binding AddNewServiceOrderCommand}"/>
            </Grid>
        </mah:Flyout>
        <mah:MetroAnimatedTabControl>
            <mah:MetroTabItem Header="Карта">
                <UserControl Content="{Binding gmaps_contol}">
                    <UserControl.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Назначить техника на выбранные заявки" Command="{Binding OpenFlyoutServicemanListCommand}"/>
                            <MenuItem Header="Перенести на другую дату" Command="{Binding OpenFlyoutServicemanListCommand}"/>
                        </ContextMenu>
                    </UserControl.ContextMenu>
                </UserControl>
            </mah:MetroTabItem>
            <mah:MetroTabItem Header="Список">
                <DataGrid x:Name="dg_main" ItemsSource="{Binding ServiceOrdersList, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedServiceOrder, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="dt_DateOrder">
                            <DatePicker x:Name="dp" SelectedDate="{Binding Path=t2eb.DateOrder,StringFormat=\{0:dd.MM.yyyy\}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="CalendarClosed">
                                        <i:InvokeCommandAction Command="{Binding DataContext.ChangeDateOrderCommand, ElementName=dg_main}" CommandParameter="{Binding SelectedDate, ElementName=dp}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DatePicker>
                        </DataTemplate>
                        <!--<DataTemplate x:Key="edt_DateOrder">
                            <DatePicker SelectedDate="{Binding Mode=TwoWay, Path=t2eb.DateOrder,StringFormat=\{0:dd.MM.yyyy\}, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>-->
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="0.5*">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text=""/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" x:Name="chk" Tag="{Binding t2eb.NewTest2Id}" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.OnCheckedCommand, ElementName=dg_main}" CommandParameter="{Binding Tag, ElementName=chk}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unchecked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.OnCheckedCommand, ElementName=dg_main}" CommandParameter="{Binding Tag, ElementName=chk}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CellTemplate="{StaticResource dt_DateOrder}" Header="Дата"/>
                        <DataGridTextColumn Header="№ объекта" Binding="{Binding t2eb.NewNumber}" Width="*"/>
                        <DataGridTextColumn Header="Назв. объекта" Binding="{Binding t2eb.NewObjName}" Width="2*"/>
                        <DataGridTextColumn Header="Адрес объекта" Binding="{Binding t2eb.NewAddress}" Width="2*"/>
                        <DataGridTextColumn Header="Техник" Binding="{Binding smeb.NewName}" Width="*"/>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Назначить техника на выбранные заявки" Command="{Binding OpenFlyoutServicemanListCommand}"/>
                            <MenuItem Header="Перенести на другую дату" Command="{Binding OpenFlyoutServicemanListCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </mah:MetroTabItem>
            <!--<mah:MetroTabItem Header="TEST">
                <DataGrid x:Name="dg_selected" ItemsSource="{Binding SelectedOrders}" AutoGenerateColumns="False" SelectionMode="Extended">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="№ объекта" Binding="{Binding t2eb.NewNumber}"/>
                        <DataGridTextColumn Header="Назв. объекта" Binding="{Binding t2eb.NewObjName}"/>
                        <DataGridTextColumn Header="Адрес объекта" Binding="{Binding t2eb.NewAddress}"/>
                        <DataGridTextColumn Header="Техник" Binding="{Binding smeb.NewName}"/>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Назначить техника на выбранные заявки" Command="{Binding OpenFlyoutServicemanListCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </mah:MetroTabItem>-->
        </mah:MetroAnimatedTabControl>
        
    </Grid>
</mah:MetroWindow>
