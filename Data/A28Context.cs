// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using VityazReports.Models.GuardObjectsOnMapGBR;

#nullable disable

namespace VityazReports.Data
{
    public partial class A28Context : DbContext
    {
        public A28Context()
        {
        }

        public A28Context(DbContextOptions<A28Context> options)
            : base(options)
        {
        }

        public virtual DbSet<ObjType> ObjType { get; set; }
        public virtual DbSet<Models.GuardObjectsOnMapGBR.Object> Object { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=andromedacentr;Initial Catalog=A28;Persist Security Info=True;User ID=A28;Password={15996E53-F691-44c8-A7CB-D128C8716B1B}");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS");

            modelBuilder.Entity<Models.GuardObjectsOnMapGBR.Object>(entity =>
            {
                entity.Property(e => e.CtignoreSystemEvent).HasDefaultValueSql("((1))");

                entity.Property(e => e.CtuseCommon).HasDefaultValueSql("((1))");

                entity.Property(e => e.Guid).HasDefaultValueSql("(newid())");

                entity.Property(e => e.IsDoubleFilter).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsTestFilter).HasDefaultValueSql("((1))");

                entity.Property(e => e.RegionId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.TransmitterId)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}