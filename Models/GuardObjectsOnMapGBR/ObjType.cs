// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using VityazReports.Data;

#nullable disable

namespace VityazReports.Models.GuardObjectsOnMapGBR
{
    public partial class ObjType
    {
        public ObjType(int objTypeId, int orderNumber, string objTypeName, string description, bool recordDeleted, bool isShowOnMap, string name, int? countObjects) {
            ObjTypeId = objTypeId;
            OrderNumber = orderNumber;
            ObjTypeName = objTypeName;
            Description = description;
            RecordDeleted = recordDeleted;
            IsShowOnMap = isShowOnMap;
            Name = name;
            CountObjects = countObjects;
        }

        public ObjType(int objTypeId, int orderNumber, string objTypeName, string description, bool recordDeleted) {
            ObjTypeId = objTypeId;
            OrderNumber = orderNumber;
            ObjTypeName = objTypeName;
            Description = description;
            RecordDeleted = recordDeleted;
        }

        [Key]
        [Column("ObjTypeID")]
        public int ObjTypeId { get; set; }
        public int OrderNumber { get; set; }
        [Required]
        [StringLength(128)]
        public string ObjTypeName { get; set; }
        [StringLength(255)]
        public string Description { get; set; }
        public bool RecordDeleted { get; set; }
        [NotMapped]
        public bool IsShowOnMap { get; set; }
        [NotMapped]
        private string _Name { get; set; }
        [NotMapped]
        public string Name { 
            get {
                if (string.IsNullOrEmpty(_Name) && !CountObjects.HasValue)
                    return "";
                if (!string.IsNullOrEmpty(_Name) && !CountObjects.HasValue)
                    return _Name;
                if (string.IsNullOrEmpty(_Name) && CountObjects.HasValue)
                    return "";
                return _Name+" ("+CountObjects.Value.ToString()+")";
            }
            set {
                _Name = value;

            }
        }
        [NotMapped]
        public int? CountObjects { get; set; }
    }
}